generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid()) // cuid and uuid are the same, but cuid is shorter
  username String @unique
  email    String @unique
  password String
  createdAt DateTime @default(now())
  posts Post[] @relation("PostAuthor")
}

model Post {
  id String @id @default(cuid())
  slug String @unique
  author User @relation("PostAuthor", fields: [authorId], references: [id])
  authorId String // In the field authorId we will store [id] of the User
  title String
  body String
  tags Tag[]
  topics Topic[]
  images Image[] @relation("ImagePost")
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Explicitly creating many to many table: (doesn't change anything)
// model PostTags {
//   id     String @id @default(cuid())
//   post   Post? @relation(fields: [postId], references: [id])
//   tag    Tag?  @relation(fields: [tagId], references: [id])
//   postId String?
//   tagId  String?
// }

// Many to many relations:
// https://www.prisma.io/docs/support/help-articles/working-with-many-to-many-relations
model Tag {
  id String @id @default(cuid())
  posts Post[]
  name String
  slug String @unique
}

model Topic {
  id String @id @default(cuid())
  posts Post[]
  name String
  slug String @unique
}

model Image {
  id String @id @default(cuid())
  post Post @relation("ImagePost", fields: [postId], references: [id])
  postId String
  name String
  url String
}

